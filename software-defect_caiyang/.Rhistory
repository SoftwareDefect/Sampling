library("ggplot2")
library("RColorBrewer")
library(ggplot2)
library(png)
infpath <- "D:/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/software-defect_caiyang/output-rank"
#### plot methods #####
methods<- c("RF","LR","NB")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
criterias <- c("PMI","IFA","Pf")
titlenames=c("PCI@20%","IFA","Pf")
# criterias <- c("IFA")
# titlenames=c("IFA")
lbnames<-NULL
for (method in methods) {
for (i in seq(criterias)) {
criteria = criterias[i]
titlename = titlenames[i]
cat(method, criteria, "\n")
data <-  NULL
sk1st <- NULL
cnames<- paste(mnames, criteria, sep=".")
for (i in seq(projects)) {
project <- projects[i]
idata <-  NULL
rdata <-  NULL
for (j in seq(mnames)){
mname <- mnames[j]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"),method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[j] <-paste(mname, criteria, sep=".")
#rdata <-as.matrix(rdata)
##上面三行是核心代码
}
#data  <- rbind(data, rdata)
rdata <- as.data.frame(rdata)
rdata <- -rdata
sk <- sk_esd(rdata)#进行一个数据集的sk检???
sk$groups[cnames]=sk$groups[cnames]
sk1st <- rbind(sk1st, sk$groups[cnames])
}
sk1st <- as.data.frame(sk1st)
sk <- sk_esd(sk1st)#sk检验结果作为输入进行sk检???
sk1st<- as.data.frame(sk1st)
### print results
printResult <- function(sk1st, path, criteria,method) {
out.fname <- sprintf(paste(outfpath,"rank-%s-%s.csv",  sep="/"),criteria,method)
dput(sk1st, file=out.fname)
}
printResult(sk1st, path, criteria,method)
}
}
#note:all measure SKEST
#install.packages("ScottKnott")
library("ScottKnottESD")
library("reshape2")
library("car")
library("effsize")
library(R.matlab)
library("ggplot2")
library("RColorBrewer")
library(ggplot2)
library(png)
infpath <- "D:/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/software-defect_caiyang/output-rank"
#### plot methods #####
methods<- c("RF","LR","NB")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
criterias <- c("Popt","Erecall","Eprecision","Efmeasure","recall","precision","F1","AUC","MCC")
titlenames=c("Popt","Recall@20%","Precision@20%","F-measure@20%","Recall","Precision","F-measure","AUC","MCC")
# criterias <- c("Popt")
# titlenames=c("Popt")
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
lbnames<-NULL
for (method in methods) {
for (i in seq(criterias)) {
criteria = criterias[i]
titlename = titlenames[i]
cat(method, criteria,"\n")
data <-  NULL
sk1st <- NULL
cnames<- paste(mnames, criteria, sep=".")
for (i in seq(projects)) {
project <- projects[i]
idata <-  NULL
rdata <-  NULL
for (j in seq(mnames)){
mname <- mnames[j]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"),method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[j] <-paste(mname, criteria, sep=".")
#rdata <-as.matrix(rdata)
##上面三行是核心代码
}
#data  <- rbind(data, rdata)
rdata <- as.data.frame(rdata)
sk <- sk_esd(rdata)#进行一个数据集的sk检???
sk1st <- rbind(sk1st, sk$groups[cnames])
}
sk1st <- as.data.frame(sk1st)
sk <- sk_esd(sk1st)#sk检验结果作为输入进行sk检???
sk1st<- as.data.frame(sk1st)
### print results
printResult <- function(sk1st, path, criteria,method) {
out.fname <- sprintf(paste(outfpath,"rank-%s-%s.csv",  sep="/"),criteria,method)
dput(sk1st, file=out.fname)
}
printResult(sk1st, path, criteria,method)
}
}
debugSource("D:/software-defect_caiyang/SKEST_caiyang_rank1.R", encoding = 'UTF-8')
View(sk1st)
#note:pf,PMI,IFA,change
#install.packages("ScottKnott")
library("ScottKnottESD")
library("reshape2")
library("car")
library("effsize")
library(R.matlab)
library("ggplot2")
library("RColorBrewer")
library(ggplot2)
library(png)
infpath <- "D:/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/software-defect_caiyang/output-rank"
#### plot methods #####
methods<- c("RF","LR","NB")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
criterias <- c("PMI","IFA","Pf")
titlenames=c("PCI@20%","IFA","Pf")
# criterias <- c("IFA")
# titlenames=c("IFA")
lbnames<-NULL
for (method in methods) {
for (i in seq(criterias)) {
criteria = criterias[i]
titlename = titlenames[i]
cat(method, criteria, "\n")
data <-  NULL
sk1st <- NULL
cnames<- paste(mnames, criteria, sep=".")
for (i in seq(projects)) {
project <- projects[i]
idata <-  NULL
rdata <-  NULL
for (j in seq(mnames)){
mname <- mnames[j]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"),method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[j] <-paste(mname, criteria, sep=".")
#rdata <-as.matrix(rdata)
##上面三行是核心代码
}
#data  <- rbind(data, rdata)
rdata <- as.data.frame(rdata)
rdata <- -rdata
sk <- sk_esd(rdata)#进行一个数据集的sk检???
sk$groups[cnames]=sk$groups[cnames]
sk1st <- rbind(sk1st, sk$groups[cnames])
}
sk1st <- as.data.frame(sk1st)
sk <- sk_esd(sk1st)#sk检验结果作为输入进行sk检???
sk1st<- as.matrix(sk1st)
### print results
printResult <- function(sk1st, path, criteria,method) {
out.fname <- sprintf(paste(outfpath,"rank-%s-%s.csv",  sep="/"),criteria,method)
dput(sk1st, file=out.fname)
}
printResult(sk1st, path, criteria,method)
}
}
#note:all measure SKEST
#install.packages("ScottKnott")
library("ScottKnottESD")
library("reshape2")
library("car")
library("effsize")
library(R.matlab)
library("ggplot2")
library("RColorBrewer")
library(ggplot2)
library(png)
infpath <- "D:/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/software-defect_caiyang/output-rank"
#### plot methods #####
methods<- c("RF","LR","NB")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
criterias <- c("Popt","Erecall","Eprecision","Efmeasure","recall","precision","F1","AUC","MCC")
titlenames=c("Popt","Recall@20%","Precision@20%","F-measure@20%","Recall","Precision","F-measure","AUC","MCC")
# criterias <- c("Popt")
# titlenames=c("Popt")
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
lbnames<-NULL
for (method in methods) {
for (i in seq(criterias)) {
criteria = criterias[i]
titlename = titlenames[i]
cat(method, criteria,"\n")
data <-  NULL
sk1st <- NULL
cnames<- paste(mnames, criteria, sep=".")
for (i in seq(projects)) {
project <- projects[i]
idata <-  NULL
rdata <-  NULL
for (j in seq(mnames)){
mname <- mnames[j]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"),method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[j] <-paste(mname, criteria, sep=".")
#rdata <-as.matrix(rdata)
##上面三行是核心代码
}
#data  <- rbind(data, rdata)
rdata <- as.data.frame(rdata)
sk <- sk_esd(rdata)#进行一个数据集的sk检???
sk1st <- rbind(sk1st, sk$groups[cnames])
}
sk1st <- as.data.frame(sk1st)
sk <- sk_esd(sk1st)#sk检验结果作为输入进行sk检???
sk1st<- as.matrix(sk1st)
### print results
printResult <- function(sk1st, path, criteria,method) {
out.fname <- sprintf(paste(outfpath,"rank-%s-%s.csv",  sep="/"),criteria,method)
dput(sk1st, file=out.fname)
}
printResult(sk1st, path, criteria,method)
}
}
debugSource("D:/software-defect_caiyang/SKEST_caiyang_rank1.R", encoding = 'UTF-8')
View(sk1st)
View(sk1st)
typeof(sk1st)
#note:pf,PMI,IFA,change
#install.packages("ScottKnott")
library("ScottKnottESD")
library("reshape2")
library("car")
library("effsize")
library(R.matlab)
library("ggplot2")
library("RColorBrewer")
library(ggplot2)
library(png)
infpath <- "D:/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/software-defect_caiyang/output-rank"
#### plot methods #####
methods<- c("RF","LR","NB")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
criterias <- c("PMI","IFA","Pf")
titlenames=c("PCI@20%","IFA","Pf")
# criterias <- c("IFA")
# titlenames=c("IFA")
lbnames<-NULL
for (method in methods) {
for (i in seq(criterias)) {
criteria = criterias[i]
titlename = titlenames[i]
cat(method, criteria, "\n")
data <-  NULL
sk1st <- NULL
cnames<- paste(mnames, criteria, sep=".")
for (i in seq(projects)) {
project <- projects[i]
idata <-  NULL
rdata <-  NULL
for (j in seq(mnames)){
mname <- mnames[j]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"),method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[j] <-paste(mname, criteria, sep=".")
#rdata <-as.matrix(rdata)
##上面三行是核心代码
}
#data  <- rbind(data, rdata)
rdata <- as.data.frame(rdata)
rdata <- -rdata
sk <- sk_esd(rdata)#进行一个数据集的sk检???
sk$groups[cnames]=sk$groups[cnames]
sk1st <- rbind(sk1st, sk$groups[cnames])
}
sk1st <- as.data.frame(sk1st)
sk <- sk_esd(sk1st)#sk检验结果作为输入进行sk检???
sk1st<- as.matrix(sk1st)
### print results
printResult <- function(sk1st, path, criteria,method) {
out.fname <- sprintf(paste(outfpath,"rank-%s-%s.txt",  sep="/"),criteria,method)
dput(sk1st, file=out.fname)
}
printResult(sk1st, path, criteria,method)
}
}
#note:all measure SKEST
#install.packages("ScottKnott")
library("ScottKnottESD")
library("reshape2")
library("car")
library("effsize")
library(R.matlab)
library("ggplot2")
library("RColorBrewer")
library(ggplot2)
library(png)
infpath <- "D:/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/software-defect_caiyang/output-rank"
#### plot methods #####
methods<- c("RF","LR","NB")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
criterias <- c("Popt","Erecall","Eprecision","Efmeasure","recall","precision","F1","AUC","MCC")
titlenames=c("Popt","Recall@20%","Precision@20%","F-measure@20%","Recall","Precision","F-measure","AUC","MCC")
# criterias <- c("Popt")
# titlenames=c("Popt")
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
lbnames<-NULL
for (method in methods) {
for (i in seq(criterias)) {
criteria = criterias[i]
titlename = titlenames[i]
cat(method, criteria,"\n")
data <-  NULL
sk1st <- NULL
cnames<- paste(mnames, criteria, sep=".")
for (i in seq(projects)) {
project <- projects[i]
idata <-  NULL
rdata <-  NULL
for (j in seq(mnames)){
mname <- mnames[j]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"),method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[j] <-paste(mname, criteria, sep=".")
#rdata <-as.matrix(rdata)
##上面三行是核心代码
}
#data  <- rbind(data, rdata)
rdata <- as.data.frame(rdata)
sk <- sk_esd(rdata)#进行一个数据集的sk检???
sk1st <- rbind(sk1st, sk$groups[cnames])
}
sk1st <- as.data.frame(sk1st)
sk <- sk_esd(sk1st)#sk检验结果作为输入进行sk检???
sk1st<- as.matrix(sk1st)
### print results
printResult <- function(sk1st, path, criteria,method) {
out.fname <- sprintf(paste(outfpath,"rank-%s-%s.txt",  sep="/"),criteria,method)
dput(sk1st, file=out.fname)
}
printResult(sk1st, outfpath, criteria,method)
}
}
#note:pf,PMI,IFA,change
#install.packages("ScottKnott")
library("ScottKnottESD")
library("reshape2")
library("car")
library("effsize")
library(R.matlab)
library("ggplot2")
library("RColorBrewer")
library(ggplot2)
library(png)
infpath <- "D:/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/software-defect_caiyang/output-rank"
#### plot methods #####
methods<- c("RF","LR","NB")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
criterias <- c("PMI","IFA","Pf")
titlenames=c("PCI@20%","IFA","Pf")
# criterias <- c("IFA")
# titlenames=c("IFA")
lbnames<-NULL
for (method in methods) {
for (i in seq(criterias)) {
criteria = criterias[i]
titlename = titlenames[i]
cat(method, criteria, "\n")
data <-  NULL
sk1st <- NULL
cnames<- paste(mnames, criteria, sep=".")
for (i in seq(projects)) {
project <- projects[i]
idata <-  NULL
rdata <-  NULL
for (j in seq(mnames)){
mname <- mnames[j]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"),method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[j] <-paste(mname, criteria, sep=".")
#rdata <-as.matrix(rdata)
##上面三行是核心代码
}
#data  <- rbind(data, rdata)
rdata <- as.data.frame(rdata)
rdata <- -rdata
sk <- sk_esd(rdata)#进行一个数据集的sk检???
sk$groups[cnames]=sk$groups[cnames]
sk1st <- rbind(sk1st, sk$groups[cnames])
}
sk1st <- as.data.frame(sk1st)
sk <- sk_esd(sk1st)#sk检验结果作为输入进行sk检???
sk1st<- as.matrix(sk1st)
### print results
printResult <- function(sk1st, path, criteria,method) {
out.fname <- sprintf(paste(outfpath,"rank-%s-%s.txt",  sep="/"),criteria,method)
dput(sk1st, file=out.fname)
}
printResult(sk1st, path, criteria,method)
}
}
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
plot_hist_single <- function(validation=validation, criteria=criteria,method=method,titlename=titlename) {
gmnames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
cnames <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
title <- NULL
data <-  NULL
for (i in seq(projects)) {
project <- projects[i]
smodata=NULL
optdata=NULL
rdata=NULL
smoout.fname <- sprintf(paste(infpath, "%s-%s-smo.csv", sep="/"), method,project)
smodata <- read.csv(smoout.fname)
smodata<- smodata[ ,colnames(smodata) %in% cnames]
optout.fname <- sprintf(paste(infpath, "%s-%s-optsmo.csv", sep="/"), method,project)
optdata <- read.csv(optout.fname)
optdata<- optdata[ ,colnames(optdata) %in% cnames]
####取出某一个指标的结果LR-brackets-none
rdata <- optdata-smodata
data  <- rbind(data, rdata)
}
pdf(file=sprintf(paste(outfpath,"hist-optsmo-%s.pdf",  sep="/"),  method), width=3.5, height=0.78)
par(mfrow=c(1, 1), mai=c(0, 0, 0.1, 0), omi=c(0.18, 0.15, 0, 0), mex=0.4, cex=0.5)
#画布下，左，上，右
ylab.names <- projects
#length(projects)+1存储所有数据集的均值颜色
boxplot(data, xlab=NA, ylab=NA, xaxt="n", yaxt="n",   boxwex=0.6, frame=FALSE, outline=FALSE) ### xlim=c(2, len+12),
### tck: length of tick marks记号长度 ### las: vertical or horizontal垂直/水平
#lwd
axis(2, mgp=c(0.5, 0.5, 0), las=0, tck=-0.02, cex.axis=0.8, lwd=1.0)
box(bty="L", lwd=1.5)
abline(h=0,lty=3,col = c("red"))
temp<- cnames[1]
text(x=seq(12), y=par("usr")[3], srt=20, adj=c(1, 1.2), labels=gmnames, xpd=NA,cex=0.7)
title(main = sprintf("%s",titlename),cex.main =0.6,font=1,line=0.3)
dev.off()
}
infpath <- "D:/software-defect_caiyang/output-optsmo"  ## using LOC
outfpath <- "D:/software-defect_caiyang/results-optsmo-zhibiao"
titlenames=c("LR","NB","RF")
methods<- c("LR","NB","RF")
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
#主函数
for (i in seq(methods)) {
method <- methods[i]
titlename<- titlenames[i]
cat(method, "\n")
plot_hist_single(validation=validation, criteria=criteria,method=method,titlename=titlename)
}
