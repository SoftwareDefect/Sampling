titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("RF","LR","NB")
#主函数
for (method in methods){
cat(method,  "\n")
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (i in seq(criterias)) {
criteria <- criterias[i]
data <- NULL
for (j in seq(projects)) {
project <- projects[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data  <- rbind(data, rdata)
}
data.out.r[criteria, ] <- apply(data[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
fname <-  sprintf(paste(outfpath,"median-%s.csv",  sep="/"),  method)
write.table(c("class"), file=fname, row.names=FALSE, col.names=FALSE, append=FALSE, eol=",")
write.table(data.out.r, file=fname, row.names=TRUE,  col.names=TRUE,  append=TRUE, sep=",")
}
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
#require(effsize)
#projects <- c("tomcat","camel")
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("RF","LR","NB")
#主函数
for (method in methods){
cat(method,  "\n")
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (i in seq(criterias)) {
criteria <- criterias[i]
data <- NULL
for (j in seq(projects)) {
project <- projects[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data  <- rbind(data, rdata)
}
data.out.r[criteria, ] <- apply(data[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
fname <-  sprintf(paste(outfpath,"median-%s.csv",  sep="/"),  method)
write.table(c("algorithms"), file=fname, row.names=FALSE, col.names=FALSE, append=FALSE, eol=",")
write.table(data.out.r, file=fname, row.names=TRUE,  col.names=TRUE,  append=TRUE, sep=",")
}
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
# install.packages("openxlsx")
library(openxlsx)
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
#require(effsize)
#projects <- c("tomcat","camel")
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median-projects"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("RF","LR","NB")
#主函数
for (method in methods){
cat(method,  "\n")
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (i in seq(projects)) {
criteria <- criterias[i]
data <- NULL
for (j in seq(criterias)) {
project <- projects[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data.out.r[criteria, ] <- apply(rdata[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
fname <-  sprintf(paste(outfpath,"median-%s.csv",  sep="/"),  method)
write.table(c("algorithms"), file=fname, row.names=FALSE, col.names=FALSE, append=FALSE, eol=",")
write.table(data.out.r, file=fname, row.names=TRUE,  col.names=TRUE,  append=TRUE, sep=",")
}
}
sheets = list("我是aa" = aa,"我是bb" = bb)
write.xlsx(sheets,"d:/我是输出结果.xlsx")
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
# install.packages("openxlsx")
library(openxlsx)
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
#require(effsize)
#projects <- c("tomcat","camel")
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median-projects"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("RF","LR","NB")
#主函数
for (method in methods){
cat(method,  "\n")
for (i in seq(projects)) {
project <- projects[i]
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (j in seq(criterias)) {
criteria <- criterias[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data.out.r[criteria, ] <- apply(rdata[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
fname <-  sprintf(paste(outfpath,"median-%s-%s.csv",  sep="/"),  method,project)
write.table(c("algorithms"), file=fname, row.names=FALSE, col.names=FALSE, append=FALSE, eol=",")
write.table(data.out.r, file=fname, row.names=TRUE,  col.names=TRUE,  append=TRUE, sep=",")
}
}
sheets = list("我是aa" = aa,"我是bb" = bb)
write.xlsx(sheets,"d:/我是输出结果.xlsx")
debugSource("D:/Git/Sampling/software-defect_caiyang/median-caiyang-projects.R", encoding = 'UTF-8')
View(rdata)
View(data.out.r)
debugSource("D:/Git/Sampling/software-defect_caiyang/median-caiyang-projects.R", encoding = 'UTF-8')
titlenames
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
# install.packages("openxlsx")
library(openxlsx)
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
#require(effsize)
#projects <- c("tomcat","camel")
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median-projects"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("RF","LR","NB")
#主函数
for (method in methods){
for (i in seq(projects)) {
project <- projects[i]
cat(method,  project,"\n")
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (j in seq(criterias)) {
criteria <- criterias[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data.out.r[criteria, ] <- apply(rdata[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
fname <-  sprintf(paste(outfpath,"median-%s-%s.csv",  sep="/"),  method,project)
write.table(c("measures"), file=fname, row.names=FALSE, col.names=FALSE, append=FALSE, eol=",")
write.table(data.out.r, file=fname, row.names=TRUE,  col.names=TRUE,  append=TRUE, sep=",")
}
}
# sheets = list("我是aa" = aa,"我是bb" = bb)
# write.xlsx(sheets,"d:/我是输出结果.xlsx")
debugSource("D:/Git/Sampling/software-defect_caiyang/median-caiyang-projects.R", encoding = 'UTF-8')
View(data.all)
View(data.all[[1]])
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
# install.packages("openxlsx")
library(openxlsx)
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
#require(effsize)
#projects <- c("tomcat","camel")
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median-projects"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("LR","NB","RF")
#主函数
for (method in methods){
data.all <- NULL
for (i in seq(projects)) {
project <- projects[i]
cat(method,  project,"\n")
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (j in seq(criterias)) {
criteria <- criterias[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data.out.r[criteria, ] <- apply(rdata[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
data.all[[i]]=data.out.r
}
sheets = list("fabric" = data.all[[1]],"jgroups" =  data.all[[2]],"camel" =  data.all[[3]],"tomcat" =  data.all[[4]],"brackets" =  data.all[[5]],"neutron" =  data.all[[6]],"spring-integration" =  data.all[[7]],"broadleaf" =  data.all[[8]],"nova" =  data.all[[9]],"npm" =  data.all[[10]])
fname <-  sprintf(paste(outfpath,"median-%s.xlsx",  sep="/"),  method)
write.xlsx(sheets,fname)
}
debugSource("D:/Git/Sampling/software-defect_caiyang/median-caiyang-projects.R", encoding = 'UTF-8')
View(data.all[[1]])
debugSource("D:/Git/Sampling/software-defect_caiyang/median-caiyang-projects.R", encoding = 'UTF-8')
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
# install.packages("openxlsx")
library(openxlsx)
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
#require(effsize)
#projects <- c("tomcat","camel")
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median-projects"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("LR","NB","RF")
#主函数
for (method in methods){
data.all <- NULL
cat(method,"\n")
for (i in seq(projects)) {
project <- projects[i]
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (j in seq(criterias)) {
criteria <- criterias[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data.out.r[criteria, ] <- apply(rdata[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
data.all[[i]]=data.out.r
}
sheets = list("fabric" = data.all[[1]],"jgroups" =  data.all[[2]],"camel" =  data.all[[3]],"tomcat" =  data.all[[4]],"brackets" =  data.all[[5]],"neutron" =  data.all[[6]],"spring-integration" =  data.all[[7]],"broadleaf" =  data.all[[8]],"nova" =  data.all[[9]],"npm" =  data.all[[10]])
fname <-  sprintf(paste(outfpath,"median-%s.xlsx",  sep="/"),  method)
write.xlsx(sheets,fname,row.names = TRUE)
}
#install.packages("png")
#install.packages("effsize")
#install.packages("R.matlab")
#install.packages("ScottKnott")
# install.packages("openxlsx")
library(openxlsx)
library(R.matlab)
library(png)
library(effsize)
library(ScottKnott)
#require(effsize)
#projects <- c("tomcat","camel")
GetMagnitude <- function(str) {
lbl <- NULL
if (str == "large") {
lbl <- "L"
} else if (str == "medium") {
lbl <- "M"
} else if (str == "small") {
lbl <- "S"
} else if (str == "negligible") {
lbl <- "T"
} else {
stop("error")
}
return(lbl)
}
mnames<- c("none","rum","nm","enn","tlr","rom","oss","smo","bsmote","csmote","cenn")
gmnames<-c("NONE","RUM","NearMiss","ENN","Tomek Link","ROM","OSS","SMOTE","BSMOTE","SMOTE+Tomek","SMOTE+ENN")
titlenames <- c("Recall","Precision","Pf","F-measure","AUC","MCC","Popt","Recall@20%","Precision@20%","F-measure@20%","PMI","IFA")
criterias <- c("recall","precision","Pf","F1","AUC","MCC","Popt","Erecall","Eprecision","Efmeasure","PMI", "IFA")
infpath <- "D:/Git/Sampling/software-defect_caiyang/output"  ## using LOC
outfpath <- "D:/Git/Sampling/software-defect_caiyang/results-median-projects"
projects <- c("fabric","jgroups","camel","tomcat","brackets","neutron","spring-integration","broadleaf","nova","npm")
methods<- c("LR","NB","RF")
#主函数
for (method in methods){
data.all <- NULL
cat(method,"\n")
for (i in seq(projects)) {
project <- projects[i]
data.out.r <- matrix(0, nrow=length(criterias), ncol=length(mnames))
data.out.r <- as.data.frame(data.out.r)
rownames(data.out.r) <- criterias
colnames(data.out.r) <- gmnames
for (j in seq(criterias)) {
criteria <- criterias[j]
rdata=NULL
for (k in seq(mnames)){
mname <- mnames[k]
out.fname <- sprintf(paste(infpath, "%s-%s-%s.csv", sep="/"), method,project,mname)
idata <- read.csv(out.fname)
####取出某一个指标的结果
idata<-idata[,criteria]
rdata=cbind(rdata, idata )
colnames(rdata)[k] <-mname
}
data.out.r[criteria, ] <- apply(rdata[, mnames], MARGIN=2, FUN=median, na.rm=FALSE)
}
rownames(data.out.r) <- titlenames
data.all[[i]]=data.out.r
}
sheets = list("fabric" = data.all[[1]],"jgroups" =  data.all[[2]],"camel" =  data.all[[3]],"tomcat" =  data.all[[4]],"brackets" =  data.all[[5]],"neutron" =  data.all[[6]],"spring-integration" =  data.all[[7]],"broadleaf" =  data.all[[8]],"nova" =  data.all[[9]],"npm" =  data.all[[10]])
fname <-  sprintf(paste(outfpath,"median-%s.xlsx",  sep="/"),  method)
write.xlsx(sheets,fname,row.names = TRUE)
}
